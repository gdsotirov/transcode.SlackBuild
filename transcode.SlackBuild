#!/bin/sh
#
# Slackware build script for Transcode
# Written by Georgi D. Sotirov <gdsotirov@dir.bg>
#

. ../slack-package.conf

NAME=transcode
VERSION=1.1.0
ARCH=${ARCH:-i486}
BUILD=1

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract and fix source
cd $TMP
tar xvf $CWD/$NAME-$VERSION.tar.bz2
cd $SRC
fix_source

# Build the package
CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS \
./configure --build=$ARCH-slackware-linux \
            --host=$ARCH-slackware-linux \
            --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --mandir=/usr/man/ \
            --enable-static=no \
            --enable-shared=yes \
            --enable-largefile \
            --enable-mmx \
            --enable-3dnow \
            --enable-sse \
            --enable-sse2 \
            --enable-altivec \
            --enable-libavcodec \
            --enable-libavformat \
            --enable-libmpeg2 \
            --enable-statbuffer \
            --enable-v4l \
            --enable-oss \
            --enable-alsa \
            --enable-libpostproc \
            --enable-freetype2 \
            --enable-lame \
            --enable-xvid \
            --enable-x264 \
            --enable-ogg \
            --enable-vorbis \
            --enable-theora \
            --enable-libdvdread \
            --enable-libdv \
            --enable-libquicktime \
            --enable-lzo \
            --enable-a52 \
            --enable-faac \
            --enable-libxml2 \
            --enable-mjpegtools \
            --enable-sdl \
            --enable-imagemagick \
            --enable-libjpeg \
            --enable-iconv \
            --enable-pv3 \
            --enable-nuv || exit 1

# Build & install
make -j4 || exit 2
make DESTDIR=$PKG install || exit 3

# Prepare the package
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG $NAME-$VERSION )
gzip_man $PKG

install -m 755 -d $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

install -m 755 -d $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 644 $CWD/slack-desc       $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install -m 644 $CWD/slack-required   $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install -m 644 $CWD/slack-suggests   $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-suggests
install -m 644 $CWD/$NAME.SlackBuild $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

# Pack
PKGNAME=$NAME-${VERSION}-$ARCH-$BUILD$MYIN
cd $PKG
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
md5sum $PKG_DIR/$PKGNAME.txz > $PKG_DIR/$PKGNAME.txz.md5
cp $CWD/slack-desc $PKG_DIR/$PKGNAME.txt

# Clean up (optionally)
if [ "$1" = "--cleanup" ]; then
  rm -rf $SRC
  rm -rf $PKG
fi

