#!/bin/sh
#
# Slackware build script for Transcode
# Copyright (C) 2007-2020 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=transcode
VERSION=1.1.7
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract and fix source
cd $TMP
tar -xvf $CWD/${NAME}-${VERSION}.tar.bz2 || exit 3
cd $SRC
fix_source

# Apply patch
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch -p1 -b -z.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

if [ "${ARCH}" = "x86_64" ]; then
  WITH_PV3=no
else
  WITH_PV3=yes
fi

# Build the package
CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS \
./configure --build=${ARCH}-slackware-linux \
            --host=${ARCH}-slackware-linux \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --mandir=/usr/man/ \
            --enable-static=no \
            --enable-shared=yes \
            --enable-largefile \
            --enable-mmx \
            --enable-3dnow \
            --enable-sse \
            --enable-sse2 \
            --enable-altivec \
            --enable-libavcodec \
            --enable-libavformat \
            --enable-libmpeg2 \
            --enable-statbuffer \
            --enable-v4l \
            --enable-oss \
            --enable-alsa \
            --enable-libpostproc \
            --enable-freetype2 \
            --enable-lame \
            --enable-xvid \
            --enable-x264 \
            --enable-ogg \
            --enable-vorbis \
            --enable-theora \
            --enable-libdvdread \
            --enable-libdv \
            --enable-libquicktime \
            --enable-lzo \
            --enable-a52 \
            --enable-libxml2 \
            --enable-mjpegtools \
            --enable-sdl \
            --enable-imagemagick \
            --enable-libjpeg \
            --enable-iconv \
            --enable-pv3=${WITH_PV3} \
            --enable-nuv || exit 5

# Build & install
make -j4 || exit 6
make DESTDIR=$PKG install || exit 7

# Manually install headers
mkdir -p $PKG/usr/include/transcode/{aclib,avilib,libtc,libtcaudio,libtcvideo}
install -m 644 $SRC/config.h       $PKG/usr/include/transcode/config.h
install -m 644 $SRC/src/*.h        $PKG/usr/include/transcode/
install -m 644 $SRC/aclib/*.h      $PKG/usr/include/transcode/aclib/
install -m 644 $SRC/avilib/*.h     $PKG/usr/include/transcode/avilib/
install -m 644 $SRC/libtc/*.h      $PKG/usr/include/transcode/libtc/
install -m 644 $SRC/libtcaudio/*.h $PKG/usr/include/transcode/libtcaudio/
install -m 644 $SRC/libtcvideo/*.h $PKG/usr/include/transcode/libtcvideo/

# Prepare the package
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG ${NAME}-${VERSION} )
gzip_man $PKG

install -m 755 -d $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install -m 755 -d $SBDIR
install -m 644 $CWD/slack-desc         $SBDIR/slack-desc
install -m 644 $CWD/slack-required     $SBDIR/slack-required
install -m 644 $CWD/slack-suggests     $SBDIR/slack-suggests
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  install -m 644 $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install -m 644 $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Pack
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
cd $PKG
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
cp $CWD/slack-desc $PKG_DIR/${PKGNAME}.txt

# Clean up (optionally)
if [ "$1" = "--cleanup" ]; then
  rm -rf $SRC
  rm -rf $PKG
fi

